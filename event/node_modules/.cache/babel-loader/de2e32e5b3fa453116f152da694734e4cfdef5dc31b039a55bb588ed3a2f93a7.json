{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mrithyunjai\\\\Documents\\\\GitHub\\\\Mini_project\\\\event\\\\src\\\\Components\\\\Land\\\\StuSignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './StaffAuth.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StuSignIn = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n\n  // Google OAuth initialization\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      /* global google */\n      google.accounts.id.initialize({\n        client_id: 'YOUR_GOOGLE_CLIENT_ID',\n        // Replace with your actual client ID\n        callback: handleGoogleResponse\n      });\n      google.accounts.id.renderButton(document.getElementById('google-signin-button'), {\n        theme: 'outline',\n        size: 'large'\n      } // Customizing button\n      );\n    };\n\n    // Load Google's API script\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.onload = initializeGoogleSignIn;\n    document.body.appendChild(script);\n  }, []);\n  const handleGoogleResponse = response => {\n    // You will get an ID token from Google. Validate this on your server for extra security.\n    const userObject = jwt_decode(response.credential);\n    console.log('Google Sign In Successful. User:', userObject);\n\n    // Here, you can redirect the user to the dashboard or perform other actions\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formErrors = {};\n    const emailDomain = '@skcet.ac.in';\n\n    // Email validation for @skcet.ac.in domain\n    if (!email) {\n      formErrors.email = 'Email is required';\n    } else if (!email.endsWith(emailDomain)) {\n      formErrors.email = `Only ${emailDomain} email addresses are allowed`;\n    }\n    if (!password) formErrors.password = 'Password is required';\n    if (Object.keys(formErrors).length === 0) {\n      console.log('Signed in with:', {\n        email,\n        password\n      });\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  const handleRedirect = url => {\n    window.location.href = url; // Redirect to the specified URL\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Student Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-button\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"google-signin-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"toggle-link\",\n        onClick: () => handleRedirect('/signup'),\n        children: \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(StuSignIn, \"krVjwQrw2RjI5d6xPGnvgJRxTuU=\");\n_c = StuSignIn;\nexport default StuSignIn;\nvar _c;\n$RefreshReg$(_c, \"StuSignIn\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","StuSignIn","_s","email","setEmail","password","setPassword","errors","setErrors","initializeGoogleSignIn","google","accounts","id","initialize","client_id","callback","handleGoogleResponse","renderButton","document","getElementById","theme","size","script","createElement","src","async","onload","body","appendChild","response","userObject","jwt_decode","credential","console","log","handleSubmit","e","preventDefault","formErrors","emailDomain","endsWith","Object","keys","length","handleRedirect","url","window","location","href","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mrithyunjai/Documents/GitHub/Mini_project/event/src/Components/Land/StuSignIn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './StaffAuth.css'; // Import the CSS for styling\r\n\r\nconst StuSignIn = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Google OAuth initialization\r\n  useEffect(() => {\r\n    const initializeGoogleSignIn = () => {\r\n      /* global google */\r\n      google.accounts.id.initialize({\r\n        client_id: 'YOUR_GOOGLE_CLIENT_ID', // Replace with your actual client ID\r\n        callback: handleGoogleResponse,\r\n      });\r\n\r\n      google.accounts.id.renderButton(\r\n        document.getElementById('google-signin-button'),\r\n        { theme: 'outline', size: 'large' } // Customizing button\r\n      );\r\n    };\r\n\r\n    // Load Google's API script\r\n    const script = document.createElement('script');\r\n    script.src = 'https://accounts.google.com/gsi/client';\r\n    script.async = true;\r\n    script.onload = initializeGoogleSignIn;\r\n    document.body.appendChild(script);\r\n  }, []);\r\n\r\n  const handleGoogleResponse = (response) => {\r\n    // You will get an ID token from Google. Validate this on your server for extra security.\r\n    const userObject = jwt_decode(response.credential);\r\n    console.log('Google Sign In Successful. User:', userObject);\r\n\r\n    // Here, you can redirect the user to the dashboard or perform other actions\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formErrors = {};\r\n    const emailDomain = '@skcet.ac.in';\r\n\r\n    // Email validation for @skcet.ac.in domain\r\n    if (!email) {\r\n      formErrors.email = 'Email is required';\r\n    } else if (!email.endsWith(emailDomain)) {\r\n      formErrors.email = `Only ${emailDomain} email addresses are allowed`;\r\n    }\r\n\r\n    if (!password) formErrors.password = 'Password is required';\r\n\r\n    if (Object.keys(formErrors).length === 0) {\r\n      console.log('Signed in with:', { email, password });\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  const handleRedirect = (url) => {\r\n    window.location.href = url; // Redirect to the specified URL\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth-page\">\r\n        <h1 className=\"page-title\">Student Sign In</h1>\r\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            {errors.email && <span className=\"error\">{errors.email}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            {errors.password && <span className=\"error\">{errors.password}</span>}\r\n          </div>\r\n          <button type=\"submit\" className=\"auth-button\">\r\n            Sign In\r\n          </button>\r\n        </form>\r\n\r\n        {/* Google Sign-In button */}\r\n        <div id=\"google-signin-button\"></div>\r\n\r\n        <p className=\"toggle-link\" onClick={() => handleRedirect('/signup')}>\r\n          Don't have an account? Sign Up\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StuSignIn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}