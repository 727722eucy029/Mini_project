{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayas\\\\OneDrive\\\\Documents\\\\GitHub\\\\Mini_project\\\\event\\\\src\\\\Components\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EventCard from './EventCard';\nimport FilterBar from './FilterBar';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState({\n    location: '',\n    category: '',\n    keyword: '',\n    dateRange: ''\n  });\n  useEffect(() => {\n    // Sample data for events\n    const sampleEvents = [{\n      id: 1,\n      title: 'Tech Workshop',\n      location: 'Auditorium',\n      category: 'Workshop',\n      date: '2024-10-20',\n      description: 'A workshop to learn the latest technologies.'\n    }, {\n      id: 2,\n      title: 'Cultural Fest',\n      location: 'Main Hall',\n      category: 'Cultural',\n      date: '2024-11-05',\n      description: 'Join us for a celebration of culture and arts.'\n    }, {\n      id: 3,\n      title: 'Hackathon',\n      location: 'Lab 3',\n      category: 'Competition',\n      date: '2024-11-12',\n      description: '24-hour hackathon to innovate and create.'\n    }, {\n      id: 4,\n      title: 'Annual Conference',\n      location: 'Conference Center',\n      category: 'Conference',\n      date: '2024-12-01',\n      description: 'A gathering of industry experts and leaders.'\n    }];\n    setEvents(sampleEvents); // Set the sample events\n  }, []);\n  const filteredEvents = events.filter(event => (!filter.location || event.location === filter.location) && (!filter.category || event.category === filter.category) && (!filter.keyword || event.title.toLowerCase().includes(filter.keyword.toLowerCase())) && (!filter.dateRange || new Date(event.date) <= new Date(filter.dateRange)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        event: event\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"oc/ugSXsU6dSRyM0Oby3fqOW520=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useState","useEffect","EventCard","FilterBar","jsxDEV","_jsxDEV","EventsPage","_s","events","setEvents","filter","setFilter","location","category","keyword","dateRange","sampleEvents","id","title","date","description","filteredEvents","event","toLowerCase","includes","Date","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["C:/Users/jayas/OneDrive/Documents/GitHub/Mini_project/event/src/Components/EventsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EventCard from './EventCard';\r\nimport FilterBar from './FilterBar';\r\nimport './styles.css';\r\n\r\nconst EventsPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [filter, setFilter] = useState({ location: '', category: '', keyword: '', dateRange: '' });\r\n\r\n  useEffect(() => {\r\n    // Sample data for events\r\n    const sampleEvents = [\r\n      {\r\n        id: 1,\r\n        title: 'Tech Workshop',\r\n        location: 'Auditorium',\r\n        category: 'Workshop',\r\n        date: '2024-10-20',\r\n        description: 'A workshop to learn the latest technologies.',\r\n      },\r\n      {\r\n        id: 2,\r\n        title: 'Cultural Fest',\r\n        location: 'Main Hall',\r\n        category: 'Cultural',\r\n        date: '2024-11-05',\r\n        description: 'Join us for a celebration of culture and arts.',\r\n      },\r\n      {\r\n        id: 3,\r\n        title: 'Hackathon',\r\n        location: 'Lab 3',\r\n        category: 'Competition',\r\n        date: '2024-11-12',\r\n        description: '24-hour hackathon to innovate and create.',\r\n      },\r\n      {\r\n        id: 4,\r\n        title: 'Annual Conference',\r\n        location: 'Conference Center',\r\n        category: 'Conference',\r\n        date: '2024-12-01',\r\n        description: 'A gathering of industry experts and leaders.',\r\n      },\r\n    ];\r\n\r\n    setEvents(sampleEvents); // Set the sample events\r\n  }, []);\r\n\r\n  const filteredEvents = events.filter(event =>\r\n    (!filter.location || event.location === filter.location) &&\r\n    (!filter.category || event.category === filter.category) &&\r\n    (!filter.keyword || event.title.toLowerCase().includes(filter.keyword.toLowerCase())) &&\r\n    (!filter.dateRange || new Date(event.date) <= new Date(filter.dateRange))\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upcoming Events</h1>\r\n      <FilterBar filter={filter} setFilter={setFilter} />\r\n      <div className=\"event-list\">\r\n        {filteredEvents.map(event => (\r\n          <EventCard key={event.id} event={event} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC;IAAEY,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EAEhGd,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,YAAY,GAAG,CACnB;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,eAAe;MACtBN,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE,UAAU;MACpBM,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE;IACf,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,eAAe;MACtBN,QAAQ,EAAE,WAAW;MACrBC,QAAQ,EAAE,UAAU;MACpBM,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE;IACf,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,WAAW;MAClBN,QAAQ,EAAE,OAAO;MACjBC,QAAQ,EAAE,aAAa;MACvBM,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE;IACf,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,mBAAmB;MAC1BN,QAAQ,EAAE,mBAAmB;MAC7BC,QAAQ,EAAE,YAAY;MACtBM,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE;IACf,CAAC,CACF;IAEDX,SAAS,CAACO,YAAY,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAGb,MAAM,CAACE,MAAM,CAACY,KAAK,IACxC,CAAC,CAACZ,MAAM,CAACE,QAAQ,IAAIU,KAAK,CAACV,QAAQ,KAAKF,MAAM,CAACE,QAAQ,MACtD,CAACF,MAAM,CAACG,QAAQ,IAAIS,KAAK,CAACT,QAAQ,KAAKH,MAAM,CAACG,QAAQ,CAAC,KACvD,CAACH,MAAM,CAACI,OAAO,IAAIQ,KAAK,CAACJ,KAAK,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,MAAM,CAACI,OAAO,CAACS,WAAW,CAAC,CAAC,CAAC,CAAC,KACpF,CAACb,MAAM,CAACK,SAAS,IAAI,IAAIU,IAAI,CAACH,KAAK,CAACH,IAAI,CAAC,IAAI,IAAIM,IAAI,CAACf,MAAM,CAACK,SAAS,CAAC,CAC1E,CAAC;EAED,oBACEV,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBzB,OAAA,CAACF,SAAS;MAACO,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDzB,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBL,cAAc,CAACW,GAAG,CAACV,KAAK,iBACvBjB,OAAA,CAACH,SAAS;QAAgBoB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACL,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA9DID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}