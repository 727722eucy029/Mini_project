{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mrithyunjai\\\\Documents\\\\GitHub\\\\Mini_project\\\\event\\\\src\\\\Components\\\\Land\\\\StaffSignUp.js\",\n  _s = $RefreshSig$();\n// src/components/StaffSignUp.js\nimport React, { useState } from 'react';\nimport Navbar from './Navbar'; // Import the Navbar component\nimport './StaffAuth.css'; // Import the CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StaffSignUp = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false); // Track if OTP is sent\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [errors, setErrors] = useState({});\n  const emailDomain = '@skcet.ac.in';\n\n  // Function to simulate OTP generation and sending\n  const sendOtp = () => {\n    const generatedOtp = Math.floor(100000 + Math.random() * 900000).toString(); // Random 6-digit OTP\n    console.log(\"Generated OTP:\", generatedOtp); // Simulate sending the OTP\n    setGeneratedOtp(generatedOtp);\n    setOtpSent(true);\n    alert(\"OTP has been sent to your email.\");\n    // Here you would integrate your email service to send OTP\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formErrors = {};\n    if (!email) {\n      formErrors.email = \"Email is required\";\n    } else if (!email.endsWith(emailDomain)) {\n      formErrors.email = `Only ${emailDomain} email addresses are allowed`;\n    }\n    if (!password) formErrors.password = \"Password is required\";\n\n    // If OTP is sent, validate it\n    if (otpSent && otp !== generatedOtp) {\n      formErrors.otp = \"Invalid OTP\";\n    }\n    if (Object.keys(formErrors).length === 0) {\n      // Simulate sign-up logic\n      console.log(\"Signed up with:\", {\n        email,\n        password\n      });\n      alert(\"Account created successfully!\");\n      // Reset the form or redirect after successful sign-up\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Staff Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"auth-button\",\n          onClick: sendOtp,\n          disabled: !email.endsWith(emailDomain) // Disable OTP sending if email domain is invalid\n          ,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"otp\",\n              children: \"OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"otp\",\n              value: otp,\n              onChange: e => setOtp(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), errors.otp && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.otp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"auth-button\",\n            children: \"Verify and Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StaffSignUp, \"DnjKrM2D0baWCfrQ42mYkL4eylo=\");\n_c = StaffSignUp;\nexport default StaffSignUp;\nvar _c;\n$RefreshReg$(_c, \"StaffSignUp\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","StaffSignUp","_s","email","setEmail","password","setPassword","otp","setOtp","otpSent","setOtpSent","generatedOtp","setGeneratedOtp","errors","setErrors","emailDomain","sendOtp","Math","floor","random","toString","console","log","alert","handleSubmit","e","preventDefault","formErrors","endsWith","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mrithyunjai/Documents/GitHub/Mini_project/event/src/Components/Land/StaffSignUp.js"],"sourcesContent":["// src/components/StaffSignUp.js\r\nimport React, { useState } from 'react';\r\nimport Navbar from './Navbar'; // Import the Navbar component\r\nimport './StaffAuth.css'; // Import the CSS for styling\r\n\r\nconst StaffSignUp = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false); // Track if OTP is sent\r\n  const [generatedOtp, setGeneratedOtp] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const emailDomain = '@skcet.ac.in';\r\n\r\n  // Function to simulate OTP generation and sending\r\n  const sendOtp = () => {\r\n    const generatedOtp = Math.floor(100000 + Math.random() * 900000).toString(); // Random 6-digit OTP\r\n    console.log(\"Generated OTP:\", generatedOtp); // Simulate sending the OTP\r\n    setGeneratedOtp(generatedOtp);\r\n    setOtpSent(true);\r\n    alert(\"OTP has been sent to your email.\");\r\n    // Here you would integrate your email service to send OTP\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formErrors = {};\r\n\r\n    if (!email) {\r\n      formErrors.email = \"Email is required\";\r\n    } else if (!email.endsWith(emailDomain)) {\r\n      formErrors.email = `Only ${emailDomain} email addresses are allowed`;\r\n    }\r\n\r\n    if (!password) formErrors.password = \"Password is required\";\r\n    \r\n    // If OTP is sent, validate it\r\n    if (otpSent && otp !== generatedOtp) {\r\n      formErrors.otp = \"Invalid OTP\";\r\n    }\r\n\r\n    if (Object.keys(formErrors).length === 0) {\r\n      // Simulate sign-up logic\r\n      console.log(\"Signed up with:\", { email, password });\r\n      alert(\"Account created successfully!\");\r\n      // Reset the form or redirect after successful sign-up\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar /> {/* Add the Navbar at the top */}\r\n      <div className=\"auth-page\">\r\n        <h1 className=\"page-title\">Staff Sign Up</h1>\r\n        <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            {errors.email && <span className=\"error\">{errors.email}</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            {errors.password && <span className=\"error\">{errors.password}</span>}\r\n          </div>\r\n          \r\n          {!otpSent ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"auth-button\"\r\n              onClick={sendOtp}\r\n              disabled={!email.endsWith(emailDomain)} // Disable OTP sending if email domain is invalid\r\n            >\r\n              Send OTP\r\n            </button>\r\n          ) : (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"otp\">OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"otp\"\r\n                  value={otp}\r\n                  onChange={(e) => setOtp(e.target.value)}\r\n                  required\r\n                />\r\n                {errors.otp && <span className=\"error\">{errors.otp}</span>}\r\n              </div>\r\n              <button type=\"submit\" className=\"auth-button\">\r\n                Verify and Sign Up\r\n              </button>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffSignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}